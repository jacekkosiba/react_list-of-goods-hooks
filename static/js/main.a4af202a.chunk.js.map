{"version":3,"sources":["types.tsx","goodsFromServer.tsx","App.tsx","functions.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","LENGTH","sort","a","b","localeCompare","length","reverse","getReorderedGoods","alphabetIsActive","lengthIsActive","alphabetBtnClass","cn","lengthBtnClass","reverseBtnClass","className","type","onClick","prevIsReversed","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KCAZ,IAaeC,EAbS,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCFWC,EAAU,WACrB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EC/BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GACjBJ,EAA2BN,EAA3BM,KAAMK,EAAqBX,EAArBW,SAAUC,EAAWZ,EAAXY,OAExB,OAAQL,GACN,KAAKD,EACH,MACF,KAAKK,EACHF,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKH,EACHH,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU7C,OAJIb,GACFK,EAAaS,UAGRT,EDOcU,CAAkBlB,EAAiB,CACtDG,aACAG,aAGIa,EAAmBb,IAAaP,EAASW,SACzCU,EAAiBd,IAAaP,EAASY,OAEvCU,EAAmBC,IAAG,SAAU,UAAW,CAC/C,YAAaH,IAGTI,EAAiBD,IAAG,SAAU,aAAc,CAChD,YAAaF,IAGTI,EAAkBF,IAAG,SAAU,YAAa,CAChD,YAAanB,IAGf,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EACXM,QA/CmB,WACrBrB,IAAaP,EAASW,UACxBH,EAAYR,EAASW,WA0CnB,iCAOA,wBACEgB,KAAK,SACLD,UAAWF,EACXI,QAhDa,WACfrB,IAAaP,EAASY,QACxBJ,EAAYR,EAASY,SA2CnB,4BAOA,wBACEe,KAAK,SACLD,UAAWD,EAEXG,QAlDY,WAClBvB,GAAc,SAAAwB,GAAc,OAAKA,MA6C7B,sBASGtB,IAAaP,EAASM,MAAQF,IAE7B,wBACEuB,KAAK,SACLD,UAAU,4BACVE,QAxDM,WAChBvB,GAAc,GACdG,EAAYR,EAASM,OAmDb,sBAUN,6BACE,6BAEIG,EAAaqB,KAAI,SAAAC,GACf,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cE7FzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4af202a.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport type ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n","const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport default goodsFromServer;\n","import { useState, FC } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { getReorderedGoods } from './functions';\nimport { SortType } from './types';\nimport goodsFromServer from './goodsFromServer';\n\nexport const App: FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    if (sortType !== SortType.ALPHABET) {\n      setSortType(SortType.ALPHABET);\n    }\n  };\n\n  const sortByLength = () => {\n    if (sortType !== SortType.LENGTH) {\n      setSortType(SortType.LENGTH);\n    }\n  };\n\n  const reverseList = () => {\n    setIsReversed(prevIsReversed => !prevIsReversed);\n  };\n\n  const resetList = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, {\n    isReversed,\n    sortType,\n  });\n\n  const alphabetIsActive = sortType === SortType.ALPHABET;\n  const lengthIsActive = sortType === SortType.LENGTH;\n\n  const alphabetBtnClass = cn('button', 'is-info', {\n    'is-light': !alphabetIsActive,\n  });\n\n  const lengthBtnClass = cn('button', 'is-success', {\n    'is-light': !lengthIsActive,\n  });\n\n  const reverseBtnClass = cn('button', 'is-danger', {\n    'is-light': !isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={alphabetBtnClass}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={lengthBtnClass}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={reverseBtnClass}\n          // className=\"button is-warning is-light\"\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n        {\n          (sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetList}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n      <ul>\n        <ul>\n          {\n            visibleGoods.map(item => {\n              return (\n                <li key={item} data-cy=\"Good\">{item}</li>\n              );\n            })\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import { ReorderOptions, SortType } from './types';\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  const { NONE, ALPHABET, LENGTH } = SortType;\n\n  switch (sortType) {\n    case NONE:\n      break;\n    case ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}